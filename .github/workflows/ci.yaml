name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Check Flask app syntax
      run: |
        python -m py_compile app.py
    
    - name: Test Flask app startup
      run: |
        python -c "from app import app; print('Flask app imports successfully')"

  build:
    needs: test
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Build and push Docker image
      run: |
        docker build -t st3el/student-task-manager:${{ github.sha }} -t st3el/student-task-manager:latest .
        docker push st3el/student-task-manager:${{ github.sha }}
        docker push st3el/student-task-manager:latest
    
    - name: Test Docker container
      run: |
        docker run -d --name test-container -p 5001:5000 st3el/student-task-manager:${{ github.sha }}
        sleep 10
        curl -f http://localhost:5001/health || exit 1
        docker stop test-container
        docker rm test-container

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Deploy to EC2 with Kubernetes
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ec2-user
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          # Install Docker if not present
          if ! command -v docker &> /dev/null; then
            sudo yum update -y
            sudo yum install -y docker
            sudo systemctl start docker
            sudo systemctl enable docker
            sudo usermod -aG docker ec2-user
          fi
          
          # Ensure Docker is running and user has permissions
          sudo systemctl start docker
          sudo chmod 666 /var/run/docker.sock
          
          # Stop and remove existing container if running
          docker stop student-task-manager || true
          docker rm student-task-manager || true
          
          # Pull the latest Docker image
          docker pull st3el/student-task-manager:${{ github.sha }}
          docker pull st3el/student-task-manager:latest
          
          # Run the new container
          docker run -d --name student-task-manager -p 80:5000 st3el/student-task-manager:${{ github.sha }}
          
          # Verify container is running
          docker ps | grep student-task-manager
        
    - name: Health check
      uses: appleboy/ssh-action@v0.1.5
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          # Wait for container to be ready
          sleep 10
          
          # Perform health check on the running container
          echo "Performing health check on http://localhost:80/health"
          curl -f http://localhost:80/health || exit 1
          echo "Deployment successful!"
